import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function run() {
  console.log('ðŸ”§ Alias yÃ¶netici eÅŸlemesi Ã§alÄ±ÅŸÄ±yor...')

  // YÃ¶netici ana kayÄ±tlarÄ±nÄ± bul
  const hande = await prisma.employee.findFirst({ where: { firstLastName: { contains: 'Hande Akat' } } })
  const seniha = await prisma.employee.findFirst({ where: { firstLastName: { contains: 'Seniha GÃ¶ksu KÃ¶ksal' } } })

  console.log('ðŸ‘¤ Hande:', hande?.currAccCode, hande?.firstLastName)
  console.log('ðŸ‘¤ Seniha:', seniha?.currAccCode, seniha?.firstLastName)

  let updated = 0

  if (hande) {
    // Hande AkatlÄ± iÃ§in olasÄ± yazÄ±mlar
    const handeAliases = [
      'Hande AkatlÄ±', 'Hande Akatli', 'Hande AkatlÄ± ', ' Hande AkatlÄ±'
    ]
    const toFixHande = await prisma.employee.findMany({
      where: {
        managerId: null,
        // CSV'den gelen managerName metnini Ã§alÄ±ÅŸan kayÄ±tlarÄ±nda tutmadÄ±ÄŸÄ±mÄ±z iÃ§in
        // ipucu olarak, Handeâ€™nin doÄŸrudan altÄ±nda bilinen kiÅŸileri tekrar atayacaÄŸÄ±z.
        // Daha garanti: Hande'yi managerName olarak taÅŸÄ±yanlarÄ± import esnasÄ±nda custom alanla tutmadÄ±ÄŸÄ±mÄ±z iÃ§in
        // isim eÅŸlemesi yapabileceÄŸimiz Ã§alÄ±ÅŸanlarÄ± string arama ile bulalÄ±m (not ideal). Burada sadece gÃ¼venli gÃ¼ncellemeler yapacaÄŸÄ±z.
        firstLastName: { in: [] }
      }
    })
    // Not: import akÄ±ÅŸÄ±nda managerName tutulmadÄ±ÄŸÄ±ndan burada doÄŸrudan toplu dÃ¼zeltme yerine
    // belirli bilinen isimleri gÃ¼ncelleyelim (loglarda geÃ§enler):
    const knownUnderHande = [
      'Safa GÃ¼neyli','GÃ¼lhanÄ±m TaÅŸ','Rafiye TÃ¼rk Bayrak','Emircan Karaduman','Fadime KÃ¶se'
    ]
    for (const name of knownUnderHande) {
      const res = await prisma.employee.updateMany({
        where: { firstLastName: name },
        data: { managerId: hande.currAccCode }
      })
      updated += res.count
    }
  }

  if (seniha) {
    // Seniha iÃ§in olasÄ± yazÄ±mlar
    const knownUnderSeniha = [
      'Ufuk GÃ¼ler','Kubilay YÄ±lmaz','Ã–zge YalÃ§Ä±nkaya'
    ]
    for (const name of knownUnderSeniha) {
      const res = await prisma.employee.updateMany({
        where: { firstLastName: name },
        data: { managerId: seniha.currAccCode }
      })
      updated += res.count
    }
  }

  console.log(`âœ… Alias dÃ¼zeltmeleri tamamlandÄ±. GÃ¼ncellenen kayÄ±t: ${updated}`)
}

run()
  .catch((e) => { console.error(e); process.exit(1) })
  .finally(async () => { await prisma.$disconnect() })


