import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function addColorsToLevels() {
  try {
    console.log('üé® ƒ∞≈ü Unvan Seviyelerine renkler ekleniyor...\n')

    const levelColors = [
      {
        levelOrder: 1,
        levelName: 'Genel M√ºd√ºr',
        color: '#DC2626', // Kƒ±rmƒ±zƒ±
        tailwindClass: 'bg-red-600'
      },
      {
        levelOrder: 2,
        levelName: 'C Level',
        color: '#7C3AED', // Mor
        tailwindClass: 'bg-purple-600'
      },
      {
        levelOrder: 3,
        levelName: 'Direkt√∂r',
        color: '#2563EB', // Mavi
        tailwindClass: 'bg-blue-600'
      },
      {
        levelOrder: 4,
        levelName: 'Kƒ±demli M√ºd√ºr',
        color: '#059669', // Ye≈üil
        tailwindClass: 'bg-emerald-600'
      },
      {
        levelOrder: 5,
        levelName: 'M√ºd√ºr',
        color: '#D97706', // Turuncu
        tailwindClass: 'bg-amber-600'
      }
    ]

    for (const levelColor of levelColors) {
      await prisma.jobTitleLevel.update({
        where: { levelOrder: levelColor.levelOrder },
        data: { 
          color: levelColor.color
        }
      })
      console.log(`‚úì ${levelColor.levelOrder}. ${levelColor.levelName} ‚Üí ${levelColor.color} (${levelColor.tailwindClass})`)
    }

    console.log('\nüéâ ƒ∞lk 5 seviyeye renkler ba≈üarƒ±yla eklendi!')
    
    // G√ºncellenmi≈ü seviyeleri g√∂ster
    console.log('\nüìä G√ºncellenmi≈ü Seviyeler:')
    const updatedLevels = await prisma.jobTitleLevel.findMany({
      where: { levelOrder: { lte: 5 } },
      orderBy: { levelOrder: 'asc' }
    })
    
    updatedLevels.forEach(level => {
      console.log(`  ${level.levelOrder}. ${level.levelName} - ${level.color}`)
    })

  } catch (error) {
    console.error('‚ùå Hata:', error)
  } finally {
    await prisma.$disconnect()
  }
}

addColorsToLevels()
