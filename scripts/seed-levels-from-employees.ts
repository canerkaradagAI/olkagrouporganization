import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

// Basit bir Ã¶ncelik sÄ±ralamasÄ±; bulunmayanlar sona eklenir
const preferredOrder = [
  'Genel MÃ¼dÃ¼r',
  'C Level',
  'DirektÃ¶r',
  'KÄ±demli MÃ¼dÃ¼r',
  'MÃ¼dÃ¼r',
  'KÄ±demli YÃ¶netici',
  'YÃ¶netici',
  'YÃ¶netici ve ya TakÄ±m Lideri (Depo)',
  'KÄ±demli Uzman',
  'Uzman',
  'Uzman YardÄ±mcÄ±sÄ±',
  'Stajyer',
  'Mavi Yaka',
  'Destek'
]

async function main() {
  console.log('ðŸ”Ž Ã‡alÄ±ÅŸanlardan levelName deÄŸerleri okunuyor...')

  const employees = await prisma.employee.findMany({
    where: { levelName: { not: null } },
    select: { levelName: true },
  })

  const uniqueLevels = Array.from(new Set(
    employees
      .map(e => (e.levelName || '').trim())
      .filter(Boolean)
  ))

  console.log('ðŸ“‹ Bulunan seviyeler:', uniqueLevels)

  // Var olan seviyeleri Ã§ek
  const existing = await prisma.jobTitleLevel.findMany()
  const existingByName = new Map(existing.map(l => [l.levelName, l]))

  // SÄ±ra numarasÄ± hazÄ±rlÄ±ÄŸÄ±
  let nextOrder = existing.length > 0 ? Math.max(...existing.map(l => l.levelOrder)) + 1 : 1

  // Ã–nce preferredOrder'a gÃ¶re ekle; yeni olanlarÄ±n hepsi sona (nextOrder)
  for (const name of preferredOrder) {
    if (!uniqueLevels.includes(name)) continue

    const current = existingByName.get(name)
    if (current) continue

    await prisma.jobTitleLevel.create({
      data: {
        levelName: name,
        levelOrder: nextOrder++,
      }
    })
    console.log(`âœ… Eklendi: ${name}`)
  }

  // Preferred listede olmayanlar iÃ§in de sona ekle
  for (const name of uniqueLevels) {
    if (preferredOrder.includes(name)) continue
    if (existingByName.has(name)) continue

    await prisma.jobTitleLevel.create({
      data: {
        levelName: name,
        levelOrder: nextOrder++,
      }
    })
    console.log(`âœ… Eklendi: ${name}`)
  }

  console.log('ðŸŽ‰ TamamlandÄ±.')
  await prisma.$disconnect()
}

main().catch(async (e) => {
  console.error(e)
  await prisma.$disconnect()
  process.exit(1)
})
